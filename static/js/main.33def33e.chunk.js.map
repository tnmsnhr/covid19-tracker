{"version":3,"sources":["components/Cards/Cards.module.css","Api/index.js","components/Chart/Chart.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","url","fetchData","country","a","changableCountry","axios","get","data","confirmed","recovered","deaths","lastUpdate","modifieddata","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","className","styles","container","Cards","Grid","spacing","justify","item","component","Card","xs","md","card","infected","join","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","CountryPicker","clicked","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","onChange","e","target","i","key","name","App","state","handleCountryChange","setState","fetchedData","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33def33e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__KHaZH\",\"card\":\"Cards_card__2hUEE\",\"infected\":\"Cards_infected__2u4Od\",\"recovered\":\"Cards_recovered__38-Tf\",\"deaths\":\"Cards_deaths__3A5E3\"};","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country)=>{\r\n    let changableCountry = url;\r\n\r\n    if(country){\r\n        changableCountry = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const { data:{confirmed, recovered, deaths, lastUpdate} } = await axios.get(changableCountry);\r\n        const modifieddata ={confirmed,recovered,deaths,lastUpdate}\r\n        return modifieddata; \r\n    }catch(error){\r\n\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async ()=>{\r\n    try{\r\n\r\n        const {data}= await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map(dailyData=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch(error){}\r\n};\r\n\r\nexport const fetchCountries = async ()=>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map(country=>country);\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n};","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../Api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data, country})=>{\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=>{\r\n            setDailyData(await fetchDailyData())\r\n        };\r\n\r\n        fetchAPI();\r\n    },[])\r\n\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n            <Line \r\n                data={{\r\n                    labels:dailyData.map(({date})=>date),\r\n                    datasets: [{\r\n                        data:dailyData.map(({confirmed})=>confirmed),\r\n                        label:'Infected',\r\n                        borderColor:'#3333ff',\r\n                        fill:true\r\n                    },{\r\n                        data:dailyData.map(({deaths})=>deaths),\r\n                        label:'Deaths',\r\n                        borderColor:'red',\r\n                        backgroundColor:'#e07979',\r\n                        fill:true\r\n                    }]\r\n                }}\r\n            /> : null\r\n    );\r\n\r\n    const barChart = (\r\n        data.confirmed? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:['#3333ff','rgb(19, 192, 19)','red'],\r\n                        data:[data.confirmed.value, data.recovered.value, data.deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current state in ${country}`}\r\n                }} />\r\n        ) : null\r\n    )\r\n    console.log(data);\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}})=>{\r\n\r\n    if(!confirmed){\r\n        return '...Loading'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={6} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={[styles.card, styles.infected].join(' ')}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\">No. of active cases of covid19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={[styles.card, styles.recovered].join(' ')}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2}\r\n                                separator=\",\"                            \r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\">No. of recoveries from covid19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={[styles.card, styles.deaths].join(' ')}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2}\r\n                                separator=\",\"                            \r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\">No. of deaths caused by covid19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cards;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../Api';\r\n\r\nconst CountryPicker = ({clicked})=>{\r\n\r\n    const [fetchedCountries, setFetchedCountries]= useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=>{\r\n            setFetchedCountries(await fetchCountries())\r\n        };\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect onChange={(e)=>clicked(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i)=> <option key={i} value={country.name}>{country.name}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default CountryPicker;","import React, {Component} from 'react';\r\nimport Chart from './components/Chart/Chart';\r\nimport Cards from './components/Cards/Cards';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './Api';\r\n\r\nclass App extends Component{\r\n\r\n    state={\r\n        data:{},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data:fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country)=>{\r\n        this.setState({country:country});\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data:fetchedData, country: country})\r\n        \r\n    }\r\n    render(){\r\n        const {data, country} = this.state;\r\n        return (\r\n            <div className ={styles.container}> \r\n                <Cards data={data}/>\r\n                <CountryPicker clicked={this.handleCountryChange}/>\r\n                <br></br>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__13w9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2XbPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__20CFN\"};"],"sourceRoot":""}